<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog - notes</title><link href="http://ann-cooper.github.io/" rel="alternate"></link><link href="http://ann-cooper.github.io/feeds/notes.atom.xml" rel="self"></link><id>http://ann-cooper.github.io/</id><updated>2022-07-25T00:00:00+00:00</updated><entry><title>Starting a blog</title><link href="http://ann-cooper.github.io/working-with-submodules.html" rel="alternate"></link><published>2022-07-25T00:00:00+00:00</published><updated>2022-07-25T00:00:00+00:00</updated><author><name>AC</name></author><id>tag:ann-cooper.github.io,2022-07-25:/working-with-submodules.html</id><summary type="html">&lt;p&gt;How to update a submodule and the superproject&lt;/p&gt;</summary><content type="html">&lt;p&gt;https://stackoverflow.com/questions/5814319/git-submodule-push
https://stackoverflow.com/questions/10848191/git-submodule-commit-hooks
https://dopeddude.medium.com/git-submodule-with-git-hooks-for-scalable-repos-50924f969937&lt;/p&gt;
&lt;p&gt;I'm okay with git -- that is, I interact with it on the command line, I know what's going on at a high level, and I can (if I brace myself) do an interactive rebase. I don't have a deep understanding of it, and I mostly do basic stuff with it. This is the first time I've tried to do much with submodules, so I've been looking into getting the output (a submodule) correctly pushed and updated when I'm pushing new posts to the superproject.&lt;/p&gt;
&lt;p&gt;One of the important parts of working with a submodule is that the submodule needs to be updated (&lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;) independently from the superproject. So, for example, if you're in the superproject and you do a &lt;code&gt;git add .&lt;/code&gt;, it will not take care of adding the changes to the submodule, if there are any.&lt;/p&gt;
&lt;p&gt;In the superproject's &lt;code&gt;.git/hooks/pre-push&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Starting pre-push&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;lastcommit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;git log origin/main -1 --oneline&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Last commit: &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;lastcommit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ... now running make publish&amp;quot;&lt;/span&gt;
make publish
&lt;span class="nb"&gt;cd&lt;/span&gt; output &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add -A . &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$lastcommit&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push origin main
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Did the output directory get pushed?&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pwd: &amp;#39;(pwd)&amp;#39;&amp;quot;&lt;/span&gt;
git submodule update --recursive
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="notes"></category><category term="pelican"></category><category term="tutorials"></category></entry><entry><title>Starting a blog</title><link href="http://ann-cooper.github.io/starting-a-blog.html" rel="alternate"></link><published>2022-07-17T00:00:00+00:00</published><updated>2022-07-17T00:00:00+00:00</updated><author><name>AC</name></author><id>tag:ann-cooper.github.io,2022-07-17:/starting-a-blog.html</id><summary type="html">&lt;p&gt;Setting up a Pelican blog&lt;/p&gt;</summary><content type="html">&lt;p&gt;After thinking about starting a blog for a few years but not actually taking any steps toward it, I was inspired to finally give it a try by &lt;a href="https://testandcode.com/191"&gt;this&lt;/a&gt; episode in one of my favorite podcasts. One of the things that they discuss is that there are many reasons to have a blog and many ways of blogging, which spoke to me because one of my major hesitations was that I don't have a very focused topic and I don't want to go after any particular audience. My intention for this blog is to be a spot where I can keep notes about things I want to remember, projects, and useful tips &amp;amp; tricks. &lt;/p&gt;
&lt;p&gt;I used the project setup and static file publishing steps from &lt;a href="https://justinnaldzin.github.io/create-a-website-using-github-pages-and-pelican.html"&gt;this Pelican tutorial&lt;/a&gt;. I didn't use the theme section or the Jupyter Notebook section because neither worked quite right for me (and I like the default theme). I didn't look into the theme support enough to know what else might need to be updated to work, but I did note that JINJA_EXTENSIONS should now be &lt;code&gt;JINJA_ENVIRONMENT = {'extensions': ['jinja2.ext.i18n']}&lt;/code&gt;. Also, I was able to skip adding any submodules to my repo by keeping the default theme and using a different approach to sharing notebooks.&lt;/p&gt;
&lt;p&gt;For notebook support, &lt;a href="https://pypi.org/project/pelican-jupyter/"&gt;the pelican-jupyter package&lt;/a&gt; was easy to setup. I'm using "markup mode", which involves adding a few lines to the &lt;code&gt;pelicanconf.py&lt;/code&gt; file, and I'm using metadata files to describe the notebook instead of putting that information in a cell inside the notebook.  &lt;/p&gt;
&lt;p&gt;Here we go!&lt;/p&gt;
&lt;p&gt;Edit: &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;pre-push.sh&lt;/code&gt; didn't work how I thought it was meant to, so I changed it a little:
    - &lt;code&gt;pre-push.sh&lt;/code&gt; to just &lt;code&gt;pre-push&lt;/code&gt;
    - set as executable witn &lt;code&gt;chmod 766 .git/hooks/pre-push&lt;/code&gt;&lt;/p&gt;</content><category term="notes"></category><category term="pelican"></category><category term="tutorials"></category></entry></feed>